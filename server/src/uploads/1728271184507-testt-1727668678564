➡️Margin and Padding:
	- EdgeInsets.all(value),
	- EdgeInsets.fromLTRB(LEFT,TOP,RIGHT,BOTTOM),
	- EdgeInsets.symmetric(horizontal: value, vertical: value)

➡️Column(widget) => display item in widget(div in html) to column (in css we use "flex-direction: column")

➡️Rows(widget) => display item in widget(div in html) to row (in css we use "flex-direction: row")

➡️mainAxisAligment(display item in widget):
	- MainAxisAligment.start
	- MainAxisAligment.center
	- MainAxisAligment.end
	- MainAxisAligment.spaceAround
	- MainAxisAligment.spaceBetween
	- MainAxisAligment.spaceEvenly(set item to center and have space).

➡️crossAxisAligment(display item in widget):
	- CrossAxisAligment.baseline
	- CrossAxisAligment.start
	- CrossAxisAligment.center
	- CrossAxisAligment.end
	- CrossAxisAligment.stretch
	- CrossAxisAligment.values.

➡️Image(widget):
	- Image.network(
	  'URL',
	   width: value,
	   height: value)
	- Image.asset(
	  'image path',
	   width: value,
	   height: value)

➡️SizedBox(widget):
	- SizedBox(
	   width: value,
	   height: value)

➡️Button(widget):
	- TextButton => text button
	TextButton(
	  style:TextButton.styleFrom(
                foregroundColor: Colors
          ),
          onPressed: (){
            //statement
          }, 
          child: const Text("Click")
        )

	- FilledButton => ປຸ່ມແບບນູນ
	  FilledButton(
            onPressed: (){
              //statement
            }, 
            child: const Text("Filled")
          ),

	- OutlineButton 
	- ElevatedButton

List => store array data
➡️ListView(widget):
	- ListView.builder => loop for create item to screen
      ListView.builder(
      itemCount: data.length,
      itemBuilder: (context, index){
        return Container(
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(30),
            color: Colors.orange
          ),
        );
      },


